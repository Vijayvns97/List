{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\etrivij\\\\Desktop\\\\scoreboard\\\\src\\\\App.jsx\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      items: [],\n      isLoaded: true\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://rickandmortyapi.com/api/character/\").then(res => res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        items: json\n      });\n    });\n  }\n\n  render() {\n    var {\n      items,\n      isLoaded\n    } = this.state;\n    var itemInfo = items.map(item => /*#__PURE__*/React.createElement(\"div\", {\n      key: item.colors.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, \"Hex:\", item.colors.hex));\n\n    if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 14\n        }\n      }, itemInfo);\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 14\n        }\n      }, itemInfo);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/etrivij/Desktop/scoreboard/src/App.jsx"],"names":["React","Component","App","constructor","state","items","isLoaded","componentDidMount","fetch","then","res","json","setState","render","itemInfo","map","item","colors","id","hex"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAC1BE,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQE,IAAI,IAAI;AACZ,WAAKC,QAAL,CAAc;AACZN,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA,KAAK,EAAEM;AAFK,OAAd;AAID,KAPH;AAQD;;AAEDE,EAAAA,MAAM,GAAG;AACP,QAAI;AAAER,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsB,KAAKF,KAA/B;AACA,QAAIU,QAAQ,GAAGT,KAAK,CAACU,GAAN,CAAUC,IAAI,iBAC3B;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,MAAL,CAAYC,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA+BF,IAAI,CAACC,MAAL,CAAYE,GAA3C,CADa,CAAf;;AAIA,QAAI,CAACb,QAAL,EAAe;AACb,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMQ,QAAN,CAAP;AACD,KAFD,MAEO;AACL,0BAAO;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBA,QAAtB,CAAP;AACD;AACF;;AA/ByB;;AAkC5B,eAAeZ,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      items: [],\n      isLoaded: true\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://rickandmortyapi.com/api/character/\")\n      .then(res => res.json())\n      .then(json => {\n        this.setState({\n          isLoaded: true,\n          items: json\n        });\n      });\n  }\n\n  render() {\n    var { items, isLoaded } = this.state;\n    var itemInfo = items.map(item => (\n      <div key={item.colors.id}>Hex:{item.colors.hex}</div>\n    ));\n\n    if (!isLoaded) {\n      return <div>{itemInfo}</div>;\n    } else {\n      return <div className=\"App\">{itemInfo}</div>;\n    }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}