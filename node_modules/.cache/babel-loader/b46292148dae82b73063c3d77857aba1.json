{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\etrivij\\\\Desktop\\\\scoreboard\\\\src\\\\App.jsx\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      character: [],\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://rickandmortyapi.com/api/character/ ').then(result => result.json()).then(json => {\n      this.setState({\n        characters: json,\n        isLoaded: true\n      });\n    });\n  }\n\n  render() {\n    var {\n      isLoaded,\n      characters\n    } = this.state;\n\n    if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, \"Loading....\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      }, characters.map(character => /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 10\n        }\n      }, character.name.render)));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/etrivij/Desktop/scoreboard/src/App.jsx"],"names":["React","Component","App","constructor","props","state","character","isLoaded","componentDidMount","fetch","then","result","json","setState","characters","render","map","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA2B;AACzBE,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,6CAAD,CAAL,CACCC,IADD,CACQC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADlB,EAECF,IAFD,CAEOE,IAAI,IAAI;AACb,WAAKC,QAAL,CAAc;AACZC,QAAAA,UAAU,EAAEF,IADA;AAEZL,QAAAA,QAAQ,EAAE;AAFE,OAAd;AAID,KAPD;AAQD;;AAEDQ,EAAAA,MAAM,GAAG;AAEP,QAAI;AAACR,MAAAA,QAAD;AAAWO,MAAAA;AAAX,QAAyB,KAAKT,KAAlC;;AAEA,QAAG,CAACE,QAAJ,EAAa;AACX,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF;AAGD,KAJD,MAIK;AACL,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEO,UAAU,CAACE,GAAX,CAAeV,SAAS,iBACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,SAAS,CAACW,IAAV,CAAeF,MAAnB,CADD,CADF,CADF;AAOD;AACA;;AArCwB;;AA0C3B,eAAeb,GAAf","sourcesContent":["import React, { Component} from 'react';\nimport './App.css';\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      character: [],\n      isLoaded: false\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://rickandmortyapi.com/api/character/ ')\n    .then ( result => result.json())\n    .then (json => {\n      this.setState({\n        characters: json,\n        isLoaded: true\n      })\n    });\n  }\n\n  render() {\n\n    var {isLoaded, characters} = this.state;\n    \n    if(!isLoaded){\n      return(\n        <div>Loading....</div>\n      );\n    }else{\n    return(\n      <div>\n       {characters.map(character =>(\n         <p>{character.name.render}</p>\n       ))}\n      </div>\n    )\n  }\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}